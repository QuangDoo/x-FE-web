name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "current" # Specify the Node.js version

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Inject environment variables
        run: echo "${{ secrets.ENV }}" > .env

      - name: Build Next.js app
        run: pnpm run build

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/x-fe-web:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/x-fe-web:${{ github.sha }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/x-fe-web:${{ github.sha }}

      - name: Deploy to staging
        env:
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.STAGING_VPS_IP }} \
          "docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}' && \
           docker pull ${{ secrets.DOCKER_USERNAME }}/x-fe-web:${{ github.sha }} && \
           docker stop x-fe-web || true && \
           docker rm x-fe-web || true && \
           docker run -d --name x-fe-web -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/x-fe-web:${{ github.sha }}"
